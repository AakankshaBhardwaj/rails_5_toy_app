# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
# Pulls products from ebay (at the first minute of every 12th hour)
1 12 * * * /bin/bash -l -c \"cd <%= deploy_to %>/<%= current_path %> && bundle exec /home/deploy/.rvm/rubies/ruby-2.3.1/bin/rake salak:pull_products_from_ebay RAILS_ENV=<%= rails_env %>\" >> <%= deploy_to %>/<%= current_path %>/log/sync_products.log

# Posts(/Shares) products to configured social medias (at every half 'n' hour)
*/30 * * * * /bin/bash -l -c \"cd <%= deploy_to %>/<%= current_path %> && bundle exec /home/deploy/.rvm/rubies/ruby-2.3.1/bin/rake salak:share_in_round_robin  RAILS_ENV=<%= rails_env %>\" >> <%= deploy_to %>/<%= current_path %>/log/crontab.log

# Pulls response from rebrandly of posted products (every 10 minute)
*/10 * * * * /bin/bash -l -c \"cd <%= deploy_to %>/<%= current_path %> && bundle exec /home/deploy/.rvm/rubies/ruby-2.3.1/bin/rake salak:pull_rebrandly_responses RAILS_ENV=<%= rails_env %>\" >> <%= deploy_to %>/<%= current_path %>/log/crontab.log
